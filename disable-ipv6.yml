---
- name: Disable IPv6 on all systems
  hosts: all
  become: yes
  vars:
    ipv6_path: /etc/sysctl.d/99-disable-ipv6.conf
    search_string: "ipv6.conf"
    chk_kernel: "{{ lsinitrd_result.stdout_lines | select('search', search_string) | list }}"
    chk_kernel2: "{{ lsinitrd_result2.stdout_lines | select('search', search_string) | list }}"

  tasks:
    - name: Comment IPv6 entry in /etc/hosts
      ansible.builtin.replace:
        path: /etc/hosts
        regexp: '^(::.+)'
        replace: '#\1'

    - name: Ensure /etc/hosts has correct permissions
      ansible.builtin.file:
        path: /etc/hosts
        owner: root
        group: root
        mode: '0644'

    - name: Create sysctl configuration file
      ansible.builtin.template:
        src: "{{ playbook_dir }}/templates/disable-ipv6.j2"
        dest: "{{ ipv6_path }}"
        owner: root
        group: root
        mode: '0644'

    - name: Run sysctl --system
      ansible.builtin.command:
        cmd: "sysctl --system"
      failed_when: sysctl_result.rc != 0
      register: sysctl_result

    - name: Run lsinitrd to test initramfs for IPv6
      ansible.builtin.command:
        cmd: "lsinitrd -k {{ ansible_kernel }}"
      register: lsinitrd_result

    - name: Check initramfs for IPv6 in block
      when: chk_kernel is defined and chk_kernel | length == 0
      block:
        - name: Rebuild initramfs
          ansible.builtin.command:
            cmd: "dracut -f -v"
          register: dracut_result

        - name: Check dracut result
          ansible.builtin.debug:
            msg: "Dracut completed successfully: {{ dracut_result.stdout }}"
          when: dracut_result is defined and dracut_result.rc == 0

        - name: Rerun lsinitrd to check initramfs
          ansible.builtin.command:
            cmd: "lsinitrd -k {{ ansible_kernel }}"
          register: lsinitrd_result2

        - name: Check resulting initramfs
          ansible.builtin.debug:
            msg: "Resulting initramfs has IPv6 disabled"
          when: chk_kernel2 is defined and chk_kernel2 | length > 0
...